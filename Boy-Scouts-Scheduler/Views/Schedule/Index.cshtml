@model IEnumerable<Boy_Scouts_Scheduler.Models.Activity>
@{
    ViewBag.Title = "Schedule";
}

@section html_head {
    <link href="@Url.Content("~/Content/jquery.weekcalendar.css")" ~/Content/rel="stylesheet" type="text/css" />
	<script src="@Url.Content("~/Scripts/date.js")" type="text/javascript"></script>
	<script src="@Url.Content("~/Scripts/jquery.weekcalendar.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.tinysort.min.js")" type="text/javascript"></script>
    <style type="text/css">
        .wc-time {
            height: 1em;
            overflow: hidden;
        }
    </style>
    <script type="text/javascript">
        $(document).ready(function () {
            $(".sort_results").click(function (e) {
                e.preventDefault();

                if ($(".calendar_item").length == 0) {
                    $("#calendars .page-break").each(function () {
                        $(this).add($(this).next()).wrapAll('<div class="calendar_item"></div>');
                    });
                }

                $(".calendar_item").tsort('', { sortFunction: function (a, b) {
                    var x = $(a.e).find(".page-break").text();
                    var y = $(b.e).find(".page-break").text();
                    return x == y ? 0 : (x > y ? 1 : -1);
                }
                });
            });
        });
    </script>

}

<h2>Schedule</h2>

@using (Html.BeginForm(new { Action = "Generate" }))
{
    <table>
        <tr> 
            @Html.Label("Generate Schedule From: ")  @Html.DropDownList("startSlotID", new SelectList(ViewBag.TimeSlots, "ID", "Name"))
        </tr>
        <tr>
            <td>
                <input type="submit" id="generateSchedule" value="Generate Schedule" />
            </td>
            <td>
                <input type="button" id="clearSchedule" class="clearSchedule" value="Clear Schedule" style="background:#FF3030"/>
            </td>
        </tr>
    </table>
}

<p>Select Schedule For:</p>
<input type="radio" name="scheduleFor" value="group" id="scheduleForGroup" checked="checked" /><label for="scheduleForGroup">Group</label>
<input type="radio" name="scheduleFor" value="station" id="scheduleForStation" /><label for="scheduleForStation">Station</label>
<input type="radio" name="scheduleFor" value="day" id="scheduleForDay" /><label for="scheduleForDay">Day</label>
@Html.DropDownList("groupDropDown", new SelectList(ViewBag.Groups, "ID", "Name"), "All")
@Html.DropDownList("stationDropDown", new SelectList(ViewBag.Stations, "ID", "Name"), "All", new { @class = "hide" })
@Html.DropDownList("dayDropDown", new SelectList(ViewBag.Days, "ID", "Name"), "All", new { @class = "hide" })
<div><a href="#" class="sort_results">Sort Results</a></div>
<div id="calendars"></div>
<script>

    function clearSchedule() {
        if (confirm('Are you sure you want to clear the current schedule?')) {
            $.post('@Html.Raw(Url.Action("ClearSchedule"))')
                    .done(function () {
                        $('#calendars').html('');
                    })
                    .fail(function () {
                        alert('Schedule clear failed.');
                    })
        }
    }

    function convertActivitiesToEvents(activities) {
        var eventData = { events: [] };
        for (var activity in activities) {
            eventData.events.push({
                id: activities[activity].ID,
                title: activities[activity].Name,
                start: new Date(activities[activity].Start),
                end: new Date(activities[activity].End)
            });
        }
        return eventData;
    }

    function addCalendar(eventData) {
        $('<div></div>').appendTo('#calendars').weekCalendar({
            date: new Date("@ViewBag.StartDate"),
            allowCalEventOverlap: true,
            overlapEventsSeparate: true,
            timeslotsPerHour: 2,
            firstDayOfWeek: 1,
            daysToShow: 5,
            businessHours: { start: 8, end: 18, limitDisplay: true },
            height: function (calendar) {
                //return $(window).height() - $('h1').outerHeight(true);
                return 500;
            },
            eventRender: function (calEvent, event) {
                if (calEvent.end.getTime() < new Date().getTime()) {
                    event.css('backgroundColor', '#aaa');
                    event.find('.time').css({ 'backgroundColor': '#999', 'border': '1px solid #888' });
                }
            },
            data: eventData,
            readonly: true
        });
    }

    $(document).ready(function () {
        $('input[name="scheduleFor"]').change(function () {
            if ($(this).val() === 'group') {
                $('#stationDropDown').addClass('hide');
                $('#dayDropDown').addClass('hide');
                $('#groupDropDown').removeClass('hide').change();
            } else if ($(this).val() === 'station') {
                $('#groupDropDown').addClass('hide');
                $('#dayDropDown').addClass('hide');
                $('#stationDropDown').removeClass('hide').change();
            } else {
                $('#dayDropDown').removeClass('hide').change();
                $('#groupDropDown').addClass('hide');
                $('#stationDropDown').addClass('hide');
            }
        });

        $('#groupDropDown, #stationDropDown, #dayDropDown').change(function () {
            var lookup = {
                'group': {
                    'dropDownID': 'groupDropDown',
                    'actionUrl': '@Html.Raw(Url.Action("GroupActivities"))'
                },
                'station': {
                    'dropDownID': 'stationDropDown',
                    'actionUrl': '@Html.Raw(Url.Action("StationActivities"))'
                },
                'day': {
                    'dropDownID': 'dayDropDown',
                    'actionUrl': '@Html.Raw(Url.Action("DayActivities"))'
                }
            };
            var dropDownType;
            if (this.id === 'groupDropDown') {
                dropDownType = 'group';
            } else if (this.id === 'stationDropDown') {
                dropDownType = 'station';
            } else {
                dropDownType = 'day';
            }
            if ($(this).val()) {
                $.post(lookup[dropDownType].actionUrl, { ID: $(this).val() })
                    .done(function (data) {
                        $('#calendars').children().remove();
                        if (dropDownType == 'day') {
                            $("#calendars").append(data);
                        } else {
                            addCalendar(convertActivitiesToEvents(data));
                        }
                    });
            } else {
                $('#calendars').children().remove();
                $('#' + lookup[dropDownType].dropDownID + ' option:gt(0)').each(function () {
                    var name = $(this).text();
                    $.post(lookup[dropDownType].actionUrl, { ID: $(this).val() })
                        .done(function (data) {
                            if (dropDownType == 'day') {
                                $("#calendars").append(data);
                            } else {
                                $('#calendars').append('<h2 class="page-break">' + name + '</h2>');
                                addCalendar(convertActivitiesToEvents(data));
                            }
                        });
                });
            }
            $('#clearSchedule').click(clearSchedule);
            $('#generateSchedule, #clearSchedule').click(function () {
                $('#clearSchedule').attr('disabled', 'disabled');
            });
        });
        $('#groupDropDown').change();
    });
</script>